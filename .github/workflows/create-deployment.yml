name: Create Kubernetes Deployment

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Deployment name"
        required: true
      image:
        description: "Container image (e.g., nginx:latest)"
        required: true
      cpu:
        description: "CPU (e.g., 200m)"
        required: true
      memory:
        description: "Memory (e.g., 256Mi)"
        required: true
      port:
        description: "Container port"
        required: true
        default: "80"
      min_replicas:
        description: "Minimum replicas"
        required: true
        default: "1"
      max_replicas:
        description: "Maximum replicas"
        required: true
        default: "5"
      keda_trigger:
        description: "KEDA trigger type (e.g., kafka)"
        required: true
      trigger_metadata:
        description: "Trigger metadata (e.g., topic=mytopic group=mygroup)"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > ~/.kube/config

      - name: Run Create Deployment
        run: |
          python3 cli.py create-deployment \
            --name "${{ github.event.inputs.name }}" \
            --image "${{ github.event.inputs.image }}" \
            --cpu "${{ github.event.inputs.cpu }}" \
            --memory "${{ github.event.inputs.memory }}" \
            --port "${{ github.event.inputs.port }}" \
            --min-replicas "${{ github.event.inputs.min_replicas }}" \
            --max-replicas "${{ github.event.inputs.max_replicas }}" \
            --keda-trigger "${{ github.event.inputs.keda_trigger }}" \
            $(for kv in ${{ github.event.inputs.trigger_metadata }}; do echo --trigger-metadata "$kv"; done)
